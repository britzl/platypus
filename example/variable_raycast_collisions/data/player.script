local platypus = require"platypus.platypus"

function init(self)
  msg.post(".", "acquire_input_focus")
  self.input_state = {}
  self.platypus = platypus.create({
      collisions = {
        separation = platypus.SEPARATION_RAYS,
        groups = {
          [hash("ground")] = platypus.DIR_ALL,
          [hash("onewayplatform")] = platypus.DIR_DOWN,
          [hash("onewaydoor")] = platypus.DIR_LEFT,
        },
        left = 4, right = 4, top = 7, bottom = 6, offset = vmath.vector3(0, -1, 0)
      },
      gravity = -800,
      max_velocity = 300,
      allow_double_jump = true,
      allow_wall_jump = true,
      allow_wall_slide = true,
      wall_slide_gravity = -50,
      debug = true,
    })
  self.current_animation = nil

end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	self.platypus.update(dt)
end

function on_message(self, message_id, message, sender)
  self.platypus.on_message(message_id, message)
  print("message id: ",message_id)
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
